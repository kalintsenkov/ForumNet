@using ForumNet.Web.Infrastructure.Extensions
@model ForumNet.Web.ViewModels.Replies.RepliesDetailsViewModel
@{
    ViewData["Title"] = "Reply Details";
    async Task GetReplies(int? parentId)
    {
        var replies = this.Model.Replies.Where(r => r.ParentId == parentId);
        if (!replies.Any())
        {
            return;
        }

        foreach (var reply in replies)
        {
            <div class="topic-inner-list">
                <div class="topic-inner">
                    <div class="topic-inner-title">
                        <div class="topic-inner-avatar">
                            <i class="tt-icon">
                                @if (reply.Author.ProfilePicture.StartsWith("#icon-ava"))
                                {
                                    <svg>
                                        <use xlink:href="@reply.Author.ProfilePicture"></use>
                                    </svg>
                                }
                                else
                                {
                                    <img src="https://res.cloudinary.com/forumnet/image/upload/t_profile-picture/@reply.Author.ProfilePicture" 
                                         alt="avatar"
                                         class="tt-icon"
                                         width="40"
                                         height="40"
                                         style="border-radius: 50%"/>
                                }
                            </i>
                        </div>
                        <div class="topic-inner-title">
                            <a asp-area="" 
                               asp-controller="Users" 
                               asp-action="Threads" 
                               asp-route-id="@reply.Author.Id">
                                @reply.Author.UserName
                            </a>
                        </div>
                    </div>
                    <div class="topic-inner-description">
                        @Html.Raw(reply.SanitizedDescription)
                        <div class="tt-item-info info-bottom">

                            <partial name="_DetailsReactionsPartial" model="reply"/>

                            <div class="col-separator"></div>

                            @if (reply.Author.Id == this.User.GetId() || this.User.IsAdministrator())
                            {
                                <a asp-area="" 
                                   asp-controller="Replies" 
                                   asp-action="Edit" 
                                   asp-route-id="@reply.Id" 
                                   class="tt-icon-btn" 
                                   style="color: #666f74">
                                    <i class="fas fa-pen"></i>
                                </a>
                                <a asp-area="" 
                                   asp-controller="Replies" 
                                   asp-action="Delete" 
                                   asp-route-id="@reply.Id" 
                                   class="tt-icon-btn" 
                                   style="color: #666f74">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            }

                            <a asp-area="" 
                               asp-controller="ReplyReports" 
                               asp-action="Create" 
                               asp-route-id="@reply.Id" 
                               class="tt-icon-btn tt-hover-02 tt-small-indent">
                                <i class="tt-icon">
                                    <svg><use xlink:href="#icon-flag"></use></svg>
                                </i>
                            </a>
                            <a asp-area="" 
                               asp-controller="Replies" 
                               asp-action="Details" 
                               asp-route-id="@reply.Id" 
                               class="tt-icon-btn tt-hover-02 tt-small-indent">
                                <i class="tt-icon">
                                    <svg><use xlink:href="#icon-reply"></use></svg>
                                </i>
                            </a>
                        </div>
                        @{ await GetReplies(reply.Id); }
                    </div>
                </div>
            </div>
        }
    }
}

<br />
<div class="container">
    <div class="tt-single-topic-list" style="word-break: break-word;">
        <div class="tt-item">
            <div class="tt-single-topic">
                <div class="tt-item-header pt-noborder">
                    <div class="tt-item-info info-top">
                        <div class="tt-avatar-icon">
                            <i class="tt-icon">
                                @if (Model.Author.ProfilePicture.StartsWith("#icon-ava"))
                                {
                                    <svg>
                                        <use xlink:href="@Model.Author.ProfilePicture"></use>
                                    </svg>
                                }
                                else
                                {
                                    <img src="https://res.cloudinary.com/forumnet/image/upload/t_profile-picture/@Model.Author.ProfilePicture"
                                         alt="avatar"
                                         class="tt-icon"
                                         width="40"
                                         height="40"
                                         style="border-radius: 50%" />
                                }
                            </i>
                        </div>
                        <div class="tt-avatar-title">
                            <a asp-area="" 
                               asp-controller="Users" 
                               asp-action="Threads" 
                               asp-route-id="@Model.Author.Id">
                                @Model.Author.UserName
                            </a>
                        </div>
                        <a href="#" class="tt-info-time">
                            <i class="tt-icon fas fa-calendar-alt"></i>@Model.CreatedOn
                        </a>
                    </div>
                </div>
                <div class="tt-item-description">
                    <p>@Html.Raw(Model.SanitizedDescription)</p>
                    @{ await GetReplies(Model.Id); }
                </div>
                <form id="reactions-form" method="post"></form>
                <div class="tt-item-info info-bottom">

                    <partial name="_DetailsReactionsPartial" model="Model"/>

                    <div class="col-separator"></div>

                    @if (Model.Author.Id == this.User.GetId() || this.User.IsAdministrator())
                    {
                        <a asp-area="" 
                           asp-controller="Replies" 
                           asp-action="Edit" 
                           asp-route-id="@Model.Id" 
                           class="tt-icon-btn" 
                           style="color: #666f74">
                            <i class="fas fa-pen"></i>
                        </a>
                        <a asp-area="" 
                           asp-controller="Replies" 
                           asp-action="Delete" 
                           asp-route-id="@Model.Id" 
                           class="tt-icon-btn" 
                           style="color: #666f74">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    }

                    <a asp-area="" 
                       asp-controller="ReplyReports" 
                       asp-action="Create" 
                       asp-route-id="@Model.Id" 
                       class="tt-icon-btn tt-hover-02 tt-small-indent">
                        <i class="tt-icon">
                            <svg><use xlink:href="#icon-flag"></use></svg>
                        </i>
                    </a>
                    <button class="tt-icon-btn" 
                            style="padding: 0; border: none; background: none; outline: none; color: #666f74" 
                            onclick="animateButton()">
                        <i class="tt-icon">
                            <svg><use xlink:href="#icon-reply"></use></svg>
                        </i>
                    </button>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-auto ml-md-auto">
                <a asp-area=""
                   asp-controller="Posts"
                   asp-action="Details"
                   asp-route-id="@Model.PostId"
                   class="btn btn-primary">
                    Back to post
                </a>
            </div>
        </div>
    </div>
    <div id="reply-box">
        <vc:create-reply post-id="@Model.PostId" parent-id="@Model.Id"></vc:create-reply>
    </div>
</div>

@section Scripts {
    <script>
        var token = $("#reactions-form input[name=__RequestVerificationToken]").val();

        function animateButton() {
            $('html, body').animate({
                scrollTop: $("#reply-box").offset().top
            }, 1500);
        }

        function likeReaction(id) {
            $.ajax({
                type: "POST",
                url: "/api/reply-reactions/like/" + id,
                headers: { 'X-CSRF-TOKEN': token },
                success: function (json) {
                    $("#reply-likes-" + id).html(json.likes);
                    $("#reply-loves-" + id).html(json.loves);
                    $("#reply-haha-" + id).html(json.hahaCount);
                    $("#reply-wow-" + id).html(json.wowCount);
                    $("#reply-sad-" + id).html(json.sadCount);
                    $("#reply-angry-" + id).html(json.angryCount);
                }
            });
        }

        function loveReaction(id) {
            $.ajax({
                type: "POST",
                url: "/api/reply-reactions/love/" + id,
                headers: { 'X-CSRF-TOKEN': token },
                success: function (json) {
                    $("#reply-likes-" + id).html(json.likes);
                    $("#reply-loves-" + id).html(json.loves);
                    $("#reply-haha-" + id).html(json.hahaCount);
                    $("#reply-wow-" + id).html(json.wowCount);
                    $("#reply-sad-" + id).html(json.sadCount);
                    $("#reply-angry-" + id).html(json.angryCount);
                }
            });
        }

        function hahaReaction(id) {
            $.ajax({
                type: "POST",
                url: "/api/reply-reactions/haha/" + id,
                headers: { 'X-CSRF-TOKEN': token },
                success: function (json) {
                    $("#reply-likes-" + id).html(json.likes);
                    $("#reply-loves-" + id).html(json.loves);
                    $("#reply-haha-" + id).html(json.hahaCount);
                    $("#reply-wow-" + id).html(json.wowCount);
                    $("#reply-sad-" + id).html(json.sadCount);
                    $("#reply-angry-" + id).html(json.angryCount);
                }
            });
        }

        function wowReaction(id) {
            $.ajax({
                type: "POST",
                url: "/api/reply-reactions/wow/" + id,
                headers: { 'X-CSRF-TOKEN': token },
                success: function (json) {
                    $("#reply-likes-" + id).html(json.likes);
                    $("#reply-loves-" + id).html(json.loves);
                    $("#reply-haha-" + id).html(json.hahaCount);
                    $("#reply-wow-" + id).html(json.wowCount);
                    $("#reply-sad-" + id).html(json.sadCount);
                    $("#reply-angry-" + id).html(json.angryCount);
                }
            });
        }

        function sadReaction(id) {
            $.ajax({
                type: "POST",
                url: "/api/reply-reactions/sad/" + id,
                headers: { 'X-CSRF-TOKEN': token },
                success: function (json) {
                    $("#reply-likes-" + id).html(json.likes);
                    $("#reply-loves-" + id).html(json.loves);
                    $("#reply-haha-" + id).html(json.hahaCount);
                    $("#reply-wow-" + id).html(json.wowCount);
                    $("#reply-sad-" + id).html(json.sadCount);
                    $("#reply-angry-" + id).html(json.angryCount);
                }
            });
        }

        function angryReaction(id) {
            $.ajax({
                type: "POST",
                url: "/api/reply-reactions/angry/" + id,
                headers: { 'X-CSRF-TOKEN': token },
                success: function (json) {
                    $("#reply-likes-" + id).html(json.likes);
                    $("#reply-loves-" + id).html(json.loves);
                    $("#reply-haha-" + id).html(json.hahaCount);
                    $("#reply-wow-" + id).html(json.wowCount);
                    $("#reply-sad-" + id).html(json.sadCount);
                    $("#reply-angry-" + id).html(json.angryCount);
                }
            });
        }
    </script>
}